<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
    <atom:link href="https://www.moddb.com/mods/timewarp/features/feed/rss.xml" rel="self" type="application/rss+xml" />
    <title>Steve0Greatness' Blog</title>
    <link>https://steve0greatness.github.io/</link>
    <description>A human being</description>
    <language>en-us</language>
    
    <item>
        <title>My blog is now in one place</title>
        <link>https://steve0greatness.github.io/blog/singular-blog.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/singular-blog.html">read this article online</a>,</p>
            <p>Alright, I've now moved all my full blog posts over to this one website. There might be other I miss in other places, but I'll add them here soon. I will not be moving over my micro-blogs, however. Those are too small, and I'd rather keep those separated anyway.</p>

<p>I'm not a fan of how I wrote before December of 2022, everything there is filled with spelling mistakes and grammar issues, I also think most of it was rude towards the reader, which is not a good impression.</p>

        </description>
        <guid isPermaLink="false">singular-blog.html</guid>
    </item>
    
    <item>
        <title>Blog Start</title>
        <link>https://steve0greatness.github.io/blog/blog-ini.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/blog-ini.html">read this article online</a>,</p>
            <p>Hello, World! Welcome to my epic cool blog hosted with GitHub pages, because I'm epic and cool and awesome and totally didn't need a first post so that git actually made sure an important directory exists. No sir.</p>

<!--this stuff should really just let me deploy my bloody stupid little site.-->

        </description>
        <guid isPermaLink="false">blog-ini.html</guid>
    </item>
    
    <item>
        <title>How to Store a Passwords</title>
        <link>https://steve0greatness.github.io/blog/How-to-Store-Passwords.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/How-to-Store-Passwords.html">read this article online</a>,</p>
            <p><strong>Disclaimer</strong>: The world of cyber-security is an incredibly complex and constantly evolving topic, and I am not a cyber-security researcher; I create projects for fun.</p>

<p>Storing a password in a server can be intimidating. Password management is incredibly tricky, as anything you mess up could compromise your users' password(s). Thankfully, random websites you've never visited before have a pure HTML blog post from 2023 about that exact topic, and how to do it properly.</p>

<p>Basically, it's just this sequence of steps:</p>

<ul>
<li>Generate a long random sequence of characters, this is called a <em><a href="https://en.wikipedia.org/wiki/Salt_(cryptography)">salt</a></em>(generate for each user, do not use a master salt)</li>
<li>Prepend(or append, it doesn't matter, just keep it consistent) this to the user's password</li>
<li>Use a <a href="https://en.wikipedia.org/wiki/Hash_function">hashing algorithm</a>, such as <a href="https://en.wikipedia.org/wiki/PBKDF2">PBKDF2</a>, to generate a unique sequence of characters that will uniquely identify that password.</li>
<li>Store the salt and hash in the same place, <em>do not</em> store the password on it's own.</li>
</ul>

<p>And to check if a password is right, repeat the steps, except rather than generating a random sequence of characters, get the sequence of characters that you've stored along with the hash.</p>

<h2 id="why-do-this">Why Do <em>This</em>?</h2>

<p>You might be thinking: <em>That's a bit arbitrary innit?</em> And if you aren't then you can stop reading now.</p>

<p>This method of storing passwords is the only way to ensure that you are securely storing them. So let's go through some other ways, and why they aren't so good.</p>

<h3 id="plaintext-passwords">Plaintext Passwords</h3>

<p>Storing your passwords in plaintext allows anyone who can get into your server to easily take any password they want, as no matter how good your users' password is, their account will be hacked if an unauthorized or malicious individual is able to get in.</p>

<h3 id="encrypted-passwords">Encrypted Passwords</h3>

<p>This is basically just plaintext with additional steps. As long as your master-key is stored somewhere, it will get stolen as soon as somebody manages to get into your system.</p>

<h3 id="bare-hashing">Bare Hashing</h3>

<p>A hash isn't able to be undone, meaning theoretically you should be able to <em>just</em> hash your password. This, while a fair assumption, has unfortunately been incorrect for quite some time. There are databases online that store every word in the english language(or just some words) in addition to common passwords and their hashes, and users will often use words for their passwords, even though it's insecure.</p>

<p>This is where salts come in. Due to the nature of hashes, even a single change in a string will entirely change it's hash, as such, if you add a random sequence of characters to a string, then you can entirely change it's hash.</p>

        </description>
        <guid isPermaLink="false">How-to-Store-Passwords.html</guid>
    </item>
    
    <item>
        <title>Satisfactory Concept: Farming</title>
        <link>https://steve0greatness.github.io/blog/satisfactory-farming-idea.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/satisfactory-farming-idea.html">read this article online</a>,</p>
            <p>Here is my idea for automating the collection of healing materials(such as Beryl Nuts) in Satisfactory</p>

<h2 id="plant-pods">Plant Pods</h2>

<p>Plant pods would be researchable in the Nutrients section of the MAM. It would cost:
* 5 modular frames 
* 10 steel pipes
* 20 biofuel</p>

<p>to research.</p>

<p>You'd be able to build it in a new _Farming_ section in the production category of the build menu. It would cost the user:
* 4 steel pipes
* 2 quickwire
* 5 biofuel</p>

<p>to build. It would require 1 MW of power to function. Plants that are left without power while in there will not continue growing or providing harvest, however they will not die(that'd be annoying if they did).</p>

<p>The user would be able to interact with the planting pod to bring up a menu that tells them what stage of growing it's at(baby, growing, fully grown), how ripe for harvest the plant is(out of 3 states: none, starting, ripe). The UI will have a button to harvest at the bottom, and a box that will allow the plant to be exchanged for another--which would give you a few leaves, proportional to how long it's been growing(0 if baby, 4 if growing, 10 if fully grown), and the amount of fruit they would have gotten from the harvest + 1 extra(for the fruit they put in).</p>

<h2 id="robot-farmers">Robot Farmers</h2>

<p>Researchable under the _Crystal Oscillator_. The research cost is:
* 10 Crystal Oscillators
* 5 AI limiter
* 3 quickwire</p>

<p>These little farmers need power to survive, which is why the _ROBOT charger_ is unlocked with them.
This building can be built in the power section. They cost:
* 15 quickwire
* 2 modular frames
* 5 crystal oscillators</p>

<p>to build.</p>

<p>Once built, this building acts like the truck station, but instead of coal, it loads power, and it can only unload items from the bot's inventory.</p>

<p>The Robo-Farmer is then buildable under the _Farming_ section in the production category of the build menu. It costs :
* 1 Factory Cart
* 2 Crystal Oscillators
* 1 AI limiter
* 3 quickwire
* 5 steal pipes</p>

<p>to build.</p>

<p>These little robots have themselves a little UI that allows you to select items they should farm. Once given a task, these robots will always return to the nearest _ROBOT charger_ when their inventory is full, or they are running low on power(robots will always attempt to keep themselves powered). If the robot cannot find a plant within range that is harvestable, then the they will wait until there is one. </p>

<h2 id="getting-the-most-out-of-these-resources">Getting the most out of these resources</h2>

<p>Robot Farmers are best at traversing on foundations(they spend less power). As such, it is recommended, that the player create a flat platform that has plant pods with some space between for the bots to traverse between them. In the center, the player should build a _ROBOT charger_, as it will allow the robots the run around equally in each direction. Players should also utilize the _Conveyor Lift_ to bring materials to a layer above for sorting, or other purposes.</p>

        </description>
        <guid isPermaLink="false">satisfactory-farming-idea.html</guid>
    </item>
    
    <item>
        <title>TF2 disguise Command</title>
        <link>https://steve0greatness.github.io/blog/tf2-disguise-cmd.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/tf2-disguise-cmd.html">read this article online</a>,</p>
            <p>A Spy class-specific command</p>

<h2 id="layout">Layout</h2>

<p>The basic layout of the disguise command is very simple.</p>

<pre><code>disguise [class : number] [team : number]
</code></pre>

<h2 id="class-parameter"><code>class</code> Parameter</h2>

<p><code>1</code> : Scout</p>

<p><code>2</code> : Sniper</p>

<p><code>3</code> : Soldier</p>

<p><code>4</code> : Demoman</p>

<p><code>5</code> : Medic</p>

<p><code>6</code> : Heavy</p>

<p><code>7</code> : Pyro</p>

<p><code>8</code> : Spy</p>

<p><code>9</code> : Engineer</p>

<p>The reason the classes are in this order is that they were added in that order. As mentioned in the <a href="https://wiki.teamfortress.com/wiki/Team_Fortress#Versions">Team Fortress wiki's article on _Quake World Team Fortress_</a>(A.K.A. _Quake Team Fortress_, or just _Team Fortress_), it mentions the classes were added in the order of _scout_, _sniper_, _soldier_, _demoman_, and _medic_; then _heavy_; _pyro_; and finally _spy_ and _engineer_.</p>

<h2 id="team-parameter"><code>team</code> Parameter</h2>

<p>These depend upon what team you're on.</p>

<p><code>-1</code> : Enemy Team</p>

<p><code>-2</code> : Friendly Team</p>

<h3 id="specific-teams">Specific Teams</h3>

<p>These aren't extremely useful, but they exist. They are independent of the team you're on. </p>

<p><code>1</code> : Blu Team</p>

<p><code>2</code> : Red Team</p>

<h2 id="example">Example</h2>

<p>Normally, when you disguise as a spy of your team, you undisguise. This also applies to the disguise command, allowing for an "undisguise" command.</p>

<pre><code>disguise "8" "-2"
</code></pre>

<p>You're also able to put this into a bind, allowing for an undisguise bind.</p>

        </description>
        <guid isPermaLink="false">tf2-disguise-cmd.html</guid>
    </item>
    
    <item>
        <title>Fortress Forever on Linux!</title>
        <link>https://steve0greatness.github.io/blog/fortress-forever-on-linux.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/fortress-forever-on-linux.html">read this article online</a>,</p>
            <p>Fortress Forever is finally playable fully on Linux using Proton-GE version 7-41(note: if you change the setting you will have to reboot the game).</p>

<p>If you need a quick rundown on how to download and install Proton-GE, <a href="https://youtu.be/B2LZ8nYd3Bw">I've made a video about that already</a>. It is technically about a different game, however, the problem is still similar enough to apply pretty much the same steps.</p>

<p>It plays pretty well, the only problem is when a local server changes maps, and the font for some of the menus(and the chat) being very... bad looking. It's not the game's fault for the second one, however, it is still something that's annoying if you don't want to do too much tinkering.</p>

<p>I'm glad to be able to play this great game on my daily OS without having to open Bottles every time I want to play Fortress Forever.</p>

<p>Whenever I'm playing Fortress Forever, I'm usually on <a href="https://www.gametracker.com/server_info/server2.maxcommunity.net:27015/">MaxTF's Midwest server</a>... I have the lowest ping there, not good though.</p>

        </description>
        <guid isPermaLink="false">fortress-forever-on-linux.html</guid>
    </item>
    
    <item>
        <title>Page Keyboard Navigation on MacOS</title>
        <link>https://steve0greatness.github.io/blog/macos-page-tab-nav.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/macos-page-tab-nav.html">read this article online</a>,</p>
            <p>Ok, so I feel like a complete idiot right now.</p>

<p>When I've been trying(and failing) to use the <span class="code">tab</span> key on my computer(it's a Macbook) for what feels like forever now. Turns out, it was as simple as hitting <span class="code">control + fn + &lt;&lt;</span>(<span class="code">&lt;&lt;</span> is <span class="code">F7</span>).</p>

<p>To be honest, I thought that it was just an issue with FireFox, and then I read <a href="https://www.a11yproject.com/posts/macos-browser-keyboard-navigation/">Browser keyboard navigation in macOS</a> and realized that it was an issue with MacOS! This should really be an option enabled by default, but Apple is stupid.</p>

        </description>
        <guid isPermaLink="false">macos-page-tab-nav.html</guid>
    </item>
    
    <item>
        <title>The FizzBuzz Program</title>
        <link>https://steve0greatness.github.io/blog/fizzbuzz.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/fizzbuzz.html">read this article online</a>,</p>
            <p><p>A FizzBuzz Program is a program used in many job interviews to see if a programmer is good at problem solving. There are many ways to make one.</p><p>First let me tell you why I write these programs. These programs, at least in my opinion, are good when you're learning a new programming language. It gives you a problem to solve, and all you need to do to solve it. Incase you're wondering, the problem is to make a program that counts from 1 to 100 and replaces all multiples of 3 with Fizz, all multiples of 5 with Buzz, and multiples of both with FizzBuzz. Generally in interviews, they also ask you to add on more multiples, such as multiples of 7 are replaced with Fuzz, and multiples of 11 are replaced with Bizz.</p><p>Now that I've told you what a FizzBuzz Program is, let me show you how I make them in Psuedo-Code.</p><div class="code">for i in 1-100 {<div style="margin-left:1em">toPrint = ""<br>print(toPrint)</div>}</div><p>The first thing I do is I create a for loop, and within it I put a print statement and a variable named toPrint.</p><div class="code">def check(checktomulti, multi, toreturn) {<div style="margin-left:1em">if checktomulti % multi == 0 {<div style="margin-left:1em">return toreturn</div>}<br>return ""</div>}<br>def checkEmpty(string, number) {<div style="margin-left:1em">if string == "" {<div style="margin-left:1em">return number</div>}<br>return string</div>}<br>for i in 1-100 {<div style="margin-left:1em">toPrint = checkEmpty(check(i, 3, "Fizz") + check(i, 5, "Buzz"), i)<br>print(toPrint)</div>}</div><p>The next thing I do is I define a function that checks if one number is a multiple of another, and if it is, then it returns the string, otherwise, it returns an empty string.</p><p>Then I make a function that checks if a string is an empty one, if it is, then it returns a number.</p><p>Once I have these 2 functions, I go back into the for loop and make the toPrint variable have the variable for checking if a string is empty(and if it is replace it with a number) check if 2 of the other function that check if one number is a multiple of another(and if it is, return a string). Finally, it prints the output.</p><p>I've tried this method many times. Below are some examples of this method in action!</p><ul><li><a href="https://replit.com/@StevesGreatness/FizzBuzzKotlin">Kotlin</a></li><li><a href="https://replit.com/@StevesGreatness/FizzBuzzlua">Lua</a></li><li><a href="https://replit.com/@StevesGreatness/FizzBuzzpython">Python</a></li><li><a href="https://replit.com/@StevesGreatness/FizzBuzzRuby">Ruby</a></li></ul></p>

        </description>
        <guid isPermaLink="false">fizzbuzz.html</guid>
    </item>
    
    <item>
        <title>Customize an HTML Checkbox</title>
        <link>https://steve0greatness.github.io/blog/checkbox-custom-styles.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/checkbox-custom-styles.html">read this article online</a>,</p>
            <p><p>Checkboxes are hard to style. But when you're making a website, they may look ugly.</p><input type="checkbox" style="appearance:checkbox"><p>As you can see here, this bland checkbox does not fit into my clearly great website(/s). But really, it does not fit in at all.</p><p>The first step toward styling it how we want it is to give it an appearence of none, and a width and height that are what you want.</p><div class="code-container"><div class="code">input[type="checkbox"] {<div style="margin-left:1em">appearance: none;<br>width: 15px;<br>height: 15px;</div>}</div><div class="preview"><input type="checkbox" style="appearance:none;width:15px;height:15px"></div></div><p>Now we can do whatever we want to it. Also, remeber to add a checked pseudo</p><div class="code-container"><div class="code">input[type="checkbox"] {<div style="margin-left:1em">appearance: none;<br>width: 15px;<br>height: 15px;<br>background: #555;<br>border: 1px #252525 solid;<br>border-radius: 2px;</div>}<br><br>input[type="checkbox"]:checked {<div style="margin-left:1em">background: #ce5aff;</div>}</div><div class="preview"><style>input[type="checkbox"].examplecheckbox3_:checked {background: #ce5aff;}input[type="checkbox"].examplecheckbox3_ {background: #555;}</style><input type="checkbox" class="examplecheckbox3_" style="appearance:none;width:15px;height:15px;border-radius:2px;border:1px #252525 solid"></div></div></p>

        </description>
        <guid isPermaLink="false">checkbox-custom-styles.html</guid>
    </item>
    
    <item>
        <title>Creating a Switch in HTML and CSS</title>
        <link>https://steve0greatness.github.io/blog/creatingaswitch.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/creatingaswitch.html">read this article online</a>,</p>
            <p><p>A switch is something that is basically just a nicer checkbox. Here, I'll be showing you how to make one.</p>The first step is to create checkbox with any classname; I'll be using <span class="code">switch</span>.<div class="code">&lt;style&gt;<div style="margin-left:1em;">input[type=checkbox].switch {}</div>&lt;/style&gt;<br>&lt;input type="checkbox" class="switch"&gt;</div><p>Next step is to add an appearance of none to the CSS--make sure to add <span class="code">-moz-</span> and <span class="code">-webkit-</span>. After that, you're going to want to set it so that the checkbox a rectangle--make sure it's in <span class="code">px</span>. We also want to set the position to relative</p><div class="code">&lt;style&gt;<div style="margin-left:1em;">input[type=checkbox].switch {<div style="margin-left:1em;">-webkit-appearance: none;<br>-moz-appearance: none;<br>appearance: none;<br>position: relative;<br>width: 30px;<br>height: 16px;</div>}</div>&lt;/style&gt;<br>&lt;input type="checkbox" class="switch"&gt;</div><p>Next we want to create a <span class="code">::before</span> pseudo. In there we want to make it have a position of relative, a width and height that are abit less than the height of the main switch, a display of inline-block, a top and left of 0, a content of anything, color of transparent, and a background color that's different from the one in the main switch.</p><div class="code">&lt;style&gt;<div style="margin-left:1em;">input[type=checkbox].switch {<div style="margin-left:1em;">-webkit-appearance: none;<br>-moz-appearance: none;<br>appearance: none;<br>position: relative;<br>width: 30px;<br>height: 16px;</div>}<br>input[type=checkbox].switch::before {<div style="margin-left:1em;">top: 0;<br>left: 0;<br>position: relative;<br>background: red;<br>content: ".";<br>color: transparent;<br>width: 14px;<br>height: 14px;</div>}</div>&lt;/style&gt;<br>&lt;input type="checkbox" class="switch"&gt;</div><p>Finally add a pseudo called <span class="code">:checked</span> which checks if a checkbox, or a radio, was checked; you'll want to change the before pseudo if the the checkbox is checked. You need to set the left to a bit less than the width of the checkbox; you can adjust it until it looks right to you.</p>Now, let's look at what it looks like<br><iframe style="background:#fff;border:none" srcdoc='<style>input[type=checkbox].switch {-webkit-appearance: none;-moz-appearance: none;appearance: none;background: #efefef;position: relative;border: 1px black solid;width: 30px;height: 16px;border-radius: 0;}input[type=checkbox].switch::before {top: 0;left: 0.24px;position: relative;background: red;content: ".";color: transparent;width: 20px;height: 14px;}input[type=checkbox].switch:checked::before {left: 25px;}</style><input type="checkbox" class="switch">'></iframe></p>

        </description>
        <guid isPermaLink="false">creatingaswitch.html</guid>
    </item>
    
    <item>
        <title>MD now works here :)</title>
        <link>https://steve0greatness.github.io/blog/md.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/md.html">read this article online</a>,</p>
            <p>I'd just like to say that my blog now works with _mark down_. So that's cool.</p>

<p>Incase you're wondering, I used a library called <a href="https://marked.js.org/">marked.js</a>(a popular library used to convert <code>markdown</code> to <code>html</code>)</p>

        </description>
        <guid isPermaLink="false">md.html</guid>
    </item>
    
    <item>
        <title>Why local variables are called "let"</title>
        <link>https://steve0greatness.github.io/blog/whyLocalVarCallLet.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/whyLocalVarCallLet.html">read this article online</a>,</p>
            <p><p>In JavaScript there are 3 different kinds of variables, global variables(using <span class="code">var</span>), constants(<span class="code">const</span>, and local variables(<span class="code">let</span>). All of the act allittle differently from eachother. Allow me to explain what they do.</p><p>Global variables, made using <span class="code">var</span>, are as they sound, global variables. Once defined, they can be used, edited, or redefind anywhere.</p><p>Constants, defined with <span class="code">const</span>, are constant, they cannot change, at all.</p><p>Local variables, defined with <span class="code">let</span>, are variables that can only be used in the place that it is defined, like a function, and it's children.</p>Now that we has that established, <em>let</em>'s talk about how local variables got their name.<p>Turns out "let" is a mathematical term. <span class="quote">The <b>"let" expression</b> may also be defined in mathematics, where it associates a Boolean condition with a restricted scope.</span> <a href="https://en.m.wikipedia.org/wiki/Let_expression" class="source">[source]</a>. It was first used in programming in early languages like Basic.</p>In case you're wondering, the main source is <a href="https://stackoverflow.com/a/37917071">this answer on Stack Overflow</a>.</p>

        </description>
        <guid isPermaLink="false">whyLocalVarCallLet.html</guid>
    </item>
    
    <item>
        <title>The Song we didn't get in Undertale</title>
        <link>https://steve0greatness.github.io/blog/The_song_that_we_didnt_get_in_undertale.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/The_song_that_we_didnt_get_in_undertale.html">read this article online</a>,</p>
            <p><p>Undertale is an amazing game. I really enjoyed my time playing it. I listen to the sound track a lot(I'm doing it as I write this). I even read a fanmade <a href="https://undertale-au.fandom.com/wiki/Category:AUs">AU</a> called <a href="https://invertedfate.com/chapters">Inverted Fate</a>. The only thing that I haven't done(and don't intend on doing) is a <a href="https://undertale.fandom.com/wiki/Genocide_Route">Genocide Run</a>. But, there's one thing that's kinda been bugging me since it first found out about it. It's the fact that their's a version of <a href="https://undertale.fandom.com/wiki/Undertale_(Soundtrack)">Undertale(the song)</a> that wasn't added, and instead was replaced with the version we have now.</p><h1>The Current Version</h1><p>The version we got of Undertale was a pretty good one. It's a little sad, while also filled with hope(just like the monsters in the neutral route. It is kinda the song of their hope, since it only plays during the end of the neutral route). Below is the version we got in the game.</p><audio controls><source src="https://static.wikia.nocookie.net/undertale/images/6/66/Undertale_%28Soundtrack%29_music_1.ogg" type="audio/ogg"><source src="https://ia902907.us.archive.org/29/items/undertaleost_202004/Undertale%20-%20Lossless%20Soundtrack%20%28toby%20fox%29/toby%20fox%20-%20UNDERTALE%20Soundtrack%20-%2071%20Undertale.mp3" type="audio/mpeg"><source src="https://ia802907.us.archive.org/29/items/undertaleost_202004/Undertale%20-%20Lossless%20Soundtrack%20%28toby%20fox%29/toby%20fox%20-%20UNDERTALE%20Soundtrack%20-%2071%20Undertale.flac" type="audio/flac">It looks like your browser doesn't support the audio tag. <a href="https://static.wikia.nocookie.net/undertale/images/6/66/Undertale_%28Soundtrack%29_music_1.ogg">This is a link to the audio so that you can download it if you so choose.</a></audio><h1>The One that could have been</h1><p>This one is also greate, and I personally think I like it a lot better than the one we have. I feel like it's more happy in tone. Even if it might not fit with what the game would have been trying to fit it's context into, it's still a good song on it's own.</p><audio controls><source src="https://static.wikia.nocookie.net/undertale/images/6/64/Undertale_%28Soundtrack%29_music_unused.ogg" type="audio/ogg"><source src="https://a.tumblr.com/tumblr_odg4sv0r3Z1s58ev6o1.mp3" type="audio/mpeg">Again, it looks like you're browser doesn't support audio, so you can <a href="https://static.wikia.nocookie.net/undertale/images/6/64/Undertale_%28Soundtrack%29_music_unused.ogg">download the song</a> to listen to it. </audio></p>

        </description>
        <guid isPermaLink="false">The_song_that_we_didnt_get_in_undertale.html</guid>
    </item>
    
    <item>
        <title>Creating a simple theme switcher</title>
        <link>https://steve0greatness.github.io/blog/creating_a_theme_switch.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/creating_a_theme_switch.html">read this article online</a>,</p>
            <p>This is a simple tutorial on how to make a simple theme switcher.<h1 id="step1">Step 1: Creating the themes</h1><p>The first step is to create the themes in your stylesheet, you can have as many as you want. Just make sure to remeber all their names within your CSS.</p><h1 id="step2">Step 2: Making an array</h1><p>This is why you need to remeber all their names within the CSS. You need to add them all to an array in your JS. Below is an example of an array containing some themes.</p><div class="code">const themes = ["light", "dark", "gamer"]</div><h1 id="step3">Step 3: Switching themes</h1><p>This is the part you've been waiting for! The actual content switcher. It's surprisingly simple.</p><p>First, get the index of the current theme using <span class="code">let currentTheme = themes.indexOf(document.documentElement.className)</span>. Then, use an if statement to see if it's more than or equal to the length of the array containing your themes.</p><div class="code">if (currentTheme + 1 &gt;= themes.length) {<div style="margin-left:1em">document.documentElement.className = themes[0]</div>} else {<div style="margin-left:1em">document.documentElement.className = themes[currentTheme + 1]</div>}</div>Now just add a listener to the button(using <a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener">event listener</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick">getElement.onclick</a>, or <a href="https://www.w3schools.com/TAgs/att_onclick.asp">onclick</a>)<h1 id="finished">Final Product</h1>In the end, what you just made should look something like the iFrame below.<br><iframe id="finalProduct" srcdoc='<!doctype html><html class="light"><head><style>html.light {background: #fff;color: #000;--buttonBackground: #fefefe;--buttonBorder: #ccc;--buttonColor: #001;}html.dark {background: #000;color: #fff;--buttonBackground: #101010;--buttonBorder: #333;--buttonColor: #fff;}html.gamer {background: #f00;color: #00f;--buttonBackground: #050;--buttonBorder: #0a0;--buttonColor: #0f0;}button {background: var(--buttonBackground);border: var(--buttonBorder) solid 3px;color: var(--buttonColor);}</style></head><body><button id="themeSwitch">Switch Theme</button><br>This is epic!<script type="application/javascript">const themes = ["light", "dark", "gamer"];document.getElementById("themeSwitch").onclick = () =&gt; {let curTheme = themes.indexOf(document.documentElement.className);if (curTheme + 1 &gt;= themes.length) {document.documentElement.className = themes[0]} else {document.documentElement.className = themes[curTheme + 1]}}</script></body></html>' style="border:none"></iframe></p>

        </description>
        <guid isPermaLink="false">creating_a_theme_switch.html</guid>
    </item>
    
    <item>
        <title>Is Kris the Knight?</title>
        <link>https://steve0greatness.github.io/blog/Is_Kris_the_Knight.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Is_Kris_the_Knight.html">read this article online</a>,</p>
            <p>Is Kris <span style='color: hotpink; font-style: italic;'>the Knight</span>? At face value, this seemes insain. Right? Well, let's look at the evidence<br>First and formost, <span style='color: hotpink; font-style: italic;'>the Knight</span> opens <span style='color: red; font-style: italic;'>Dark Fountains</span>. Now, what does Kris do at the end of Chapter 2? They create a <span style='color: red; font-style: italic;'>Dark Fountain</span>.<br>Second, what does Kris look like in <span style='color: red; font-style: italic;'>Dark Worlds</span>? That's right, a Knight.<br><img src='https://static.wikia.nocookie.net/deltarune/images/9/96/Kris_overworld_darkworld.png' width='100' align='left'>This is what Kris looks like in a <span style='color: red; font-style: italic;'>Dark World</span>, they're wearing plated armor. They even have a sword(not shown in image).<br>We know that Kris made a <span style='color: red; font-style: italic;'>Dark Fountain</span> at the end of Chapter 2, so is it really that far off to assume that they also made the one in the librarby's computer lab? Or the on in the closet for that matter. Well, we know that they had thier knife at the <a href='https://youtu.be/wBS1MNkVPGw'>end of chapter 1</a>, and only Toby Fox knows what they did before chapter 1.<br>In the end of chapter 2, they rips they soul out before creating the new fountain, and shuffeling around outside; and slashing Torial's tires. Infact, they rips out their heart in the end of chapter 1, too. Afterward, they presumably went to librarby and made a fountain in the computer lab.<br>This is a really common thereoy, but it really needs more evidence to be collected, and more speculating to be done.<br clear='left'><span style='color: grey; font-size: 13px;'>taken from <a href='https://deltarune.fandom.com/wiki/'>Fandom</a>.</span></p>

        </description>
        <guid isPermaLink="false">Is_Kris_the_Knight.html</guid>
    </item>
    
    <item>
        <title>Symbols</title>
        <link>https://steve0greatness.github.io/blog/symbols.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/symbols.html">read this article online</a>,</p>
            <p>In our lifes on the internet, we see alot of characters that we don't normally see. Like @, #, &amp;, [], {}, \, ;, and |. But what are thier names, what are their origins, and why do they look like they do? I'm going to try and find out!<br>Let's start with what they are used for most of the time on the web.<ol><li>@ is used to mean at. It can also be used to define a username(<span style="font-weight:bold">@</span>user), or even emails(person<span style="font-weight:bold">@</span>emailprovider.topleveldomain)</li><li>The hashtag, #, is used for tagging posts to topics(<span style="font-weight:bold">#</span>NumberOneProgrammer). It is also sometimes used to define a number(<span style="font-weight:bold">#</span>1). It's also used in CSS to define IDs, and in urls to scroll down to a certain part of the page(<span style="font-weight:bold">#</span>theMan).</li><li>&amp; is a symbol used to mean "and"(the dog <span style="font-weight:bold">&amp;</span> the cat). It is also used in urls to be an addition to the search(?q=look%20mom%20no%hands%21<span style="font-weight:bold">&amp;</span>images)</li><li>Square brackets([]), are used to define a list in the most widely used programming language on the web, JavaScript(<span style="font-weight:bold">[</span>"the dog", "the cat", "the bird", "the plane"<span style="font-weight:bold">]</span>). They can also be used in the middle of quotes to give context("Have a nice day!" <span style="font-weight:bold">[</span>The mayor<span style="font-weight:bold">]</span> shouted)</li><li>Curly brackets({}) are used to define a JavaScript object( {person: "Jim", car: "JavaScript car :)"} )</li><li>backslash() is used in markdown, and JavaScript strings, to define a character that should remain itself, such as <span style="font-weight:bold">&lt;/span># showing up as a # instead of a heading.</li><li>Semi-collins(;) are used to define the end of a command in lots of programming languages, like JavaScript(alert("hello world")<span style="font-weight:bold">;</span>), PHP(echo "hello world"<span style="font-weight:bold">;</span>)</li><li>|, or Vertical bar, has no <em>real</em> use on the web.</li><li>~, or tilde, also, doesn't find much use</li><li>Grave accents(<code>) are used to define a multi-lined JavaScript string(&lt;span style="font-weight:bold"&gt;</code></span>this has<br>2 lines<span style="font-weight:bold"><code>&lt;/span&gt;)&lt;/li&gt;&lt;/ol&gt;Those are what they are, but what about their original meanings?&lt;ol&gt;&lt;li&gt;The At-Sign(@) is used to mean at(they're &lt;span style="font-weight:bold"&gt;@&lt;/span&gt; their house), it could also be used for a price(&lt;span style="font-weight:bold"&gt;@&lt;/span&gt;10 pence)&lt;/li&gt;&lt;li&gt;#(pound-sign, hashtag, number-sign, octothorpe, sharp-sign), it's used to mean lb(10 &lt;span style="font-weight:bold"&gt;#&lt;/span&gt;), define numbers(&lt;span style="font-weight:bold"&gt;#&lt;/span&gt;10), define a tag in social media(&lt;span style="font-weight:bold"&gt;#&lt;/span&gt;NumberOneCoder), to define the musical notes that are sharp, or used on telephones to do... something.&lt;/li&gt;&lt;li&gt;Ampersands(&amp;amp;) are used as &amp;amp;, that's it(doges &lt;span style="font-weight:bold"&gt;&amp;amp;&lt;/span&gt; golden retrievers).&lt;/li&gt;&lt;li&gt;[Square Brackets] are used as a way to add context to the middle of a sentence, like "he ate the sausage", but we don't know who "he" is, and what kind of sausage he is eating, so it should be "&lt;span style="font-weight:bold"&gt;[the young boy]&lt;/span&gt; ate the &lt;span style="font-weight:bold"&gt;[cheese filled]&lt;/span&gt; sausage"&lt;/li&gt;&lt;li&gt;{Curly Brackets} don't get much use. They would be used for &lt;span style="font-weight:bold"&gt;{&lt;/span&gt;defining words, lines, sentences as being in a group&lt;span style="font-weight:bold"&gt;}&lt;/span&gt;.&lt;/li&gt;&lt;li&gt;|s are used to define absolute value, like &lt;span style="font-weight:bold"&gt;|-2|&lt;/span&gt; = 2. It can also be used as a replacement for periods, and forward slashed&lt;/li&gt;&lt;li&gt;The backslash doesn't get much real use in writing. In math, it is used to represent the set difference(which I won't really explain), such as a&lt;span style="font-weight:bold"&gt;\&lt;/span&gt;n&lt;/li&gt;&lt;li&gt;The Semicolon is used to seperate ideas in a sentence filled with commas, add seperation between an explaination&lt;span style="font-weight:bold"&gt;; and a seperator(,) in a list, and merge 2 sentences together without a compound(and, but, or). Such as "I am so happy for them, and I am proud" &amp; "I am so happy; I am proud." act the same. If you'd like a better explaination, I'd suggest you to check out &lt;a href="https://youtu.be/th-zyfvwDdI"&gt;How to use a semicolon&lt;/a&gt; by Ted-Ed, it's a great whatch, and it's presented in an interesting and fun style.&lt;/li&gt;&lt;li&gt;Grave accents(</code>) are used in some words from other languages, but not much in English. However it can be used in songs and poems to indicate that silent letters aren't silent.</li><li>Tildes(~) can be used in a sentence to mean about, for example, <span style="font-weight:bold">~</span>10.</li></ol></p>

        </description>
        <guid isPermaLink="false">symbols.html</guid>
    </item>
    
    <item>
        <title>Creating a HTML drop-down list</title>
        <link>https://steve0greatness.github.io/blog/Creating_HTML_DD_List.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Creating_HTML_DD_List.html">read this article online</a>,</p>
            <p>Inorder to create a drop-down selection list in HTML, we must first understand why they are important.<br>Drop-down lists can be used in lots of ways, from creating a way for people to chose from a strict set of options, to making an on-off switch(even though you should use buttons for that)<br>Before we start, here is an example:<table><td style="font-weight: bolder; text-align: right; font-size: 1em;">Select Image: </td><td><select id="selcet" onchange="document.getElementById('img').src = document.getElementById('selcet').value"><option value="https://upload.wikimedia.org/wikipedia/commons/a/a2/Paul_von_Hindenburg_%281914%29_von_Nicola_Perscheid.jpg" selected>Img 1</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d4/Wilfried_Gruhn.jpg/121px-Wilfried_Gruhn.jpg">Img 2</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Blackcap_%28Sylvia_atricapilla%29_male.jpg/129px-Blackcap_%28Sylvia_atricapilla%29_male.jpg">Img 3</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Lt._Gen._Nguy%E1%BB%85n_V%C4%83n_Thi%E1%BB%87u_at_Cam_Ranh_Base%2C_October_26%2C_1966.jpg/116px-Lt._Gen._Nguy%E1%BB%85n_V%C4%83n_Thi%E1%BB%87u_at_Cam_Ranh_Base%2C_October_26%2C_1966.jpg">Img 3</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Steve_Stricker.jpg/157px-Steve_Stricker.jpg">Img 4</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Aegotheles_chrisoptus_-_Catlereigh_Nature_Reserve.jpg/350px-Aegotheles_chrisoptus_-_Catlereigh_Nature_Reserve.jpg">Img 5</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Michael_Whelan_-_Lucca_2017.jpg/118px-Michael_Whelan_-_Lucca_2017.jpg">Img 6</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/St_Pancras_Railway_Station_2012-06-23.jpg/152px-St_Pancras_Railway_Station_2012-06-23.jpg">Img 7</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Mae_La_refugee_camp_TFA.jpg/162px-Mae_La_refugee_camp_TFA.jpg">Img 8</option><option value="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/JimmyCarterPortrait_%28cropped%29.jpg/121px-JimmyCarterPortrait_%28cropped%29.jpg">Img 9</option></select></td></table><img id="img" src="https://upload.wikimedia.org/wikipedia/commons/a/a2/Paul_von_Hindenburg_%281914%29_von_Nicola_Perscheid.jpg" style="width: auto; height: 10em;"><div style="font-size: 10px;">Images from <a style="color: inherit;" href="https://en.wikipedia.org">Wikipedia</a>, on <a style="color: inherit;" href="https://web.archive.org/web/20211001135954/https://en.wikipedia.org/wiki/Main_Page">Oct. 2nd &amp; </a><a style="color: inherit;" href="https://web.archive.org/web/20211002095505/https://en.wikipedia.org/wiki/Main_Page">1st, 2021</a></div>For some weird reason, it's not in<div class="code">&lt;input&gt;</div>It has it's own tags, know as <span class="code">&lt;select&gt;</span> and <span class="code">&lt;option&gt;</span>. Using these is alittle like making a list, if you've ever made one. Here's an example bit of HTML.<div class="code">&lt;select&gt;<div style="text-indent: 1em;">&lt;option&gt;op 1&lt;/option&gt;</div><div style="text-indent: 1em;">&lt;option&gt;op 2&lt;/option&gt;</div>&lt;/select&gt;</div>Next we want to add values to <span class="code">&lt;options&gt;</span>, and an id(#) to <span class="code">&lt;select&gt;</span>.<br>You most-likely already know how to do ids, and maybe also values(if you have used input in any way), so I'll leave it up to you.<br>However, you may not know some things that could be useful here, such as preselections, or making things update upon being changed, well, you can do preselections with <span class="code">selected</span> in the <span class="code">&lt;option&gt;</span> that you want to be preselected. Changes done the page upon the change of the selection in the drop-down(or anything else that can be changed by the user) is <span class="code">onchange="submitFunction()"</span> being placed in the <span class="code">&lt;select&gt;</span>.<br>Let's check back on the code that we made at the code example:<div class="code" id="finished">&lt;select onchange="submitFunction()" id="selection"&gt;<div style="text-indent: 1em;">&lt;option value="op1" selected&gt;op 1&lt;/option&gt;</div><div style="text-indent: 1em;">&lt;option value="op2"&gt;op 2&lt;/option&gt;</div>&lt;/select&gt;</div>Inorder to access the selected option with JavaScript, use <span class="code">document.getElementById("selection").value</span><br>That's basically it, feel free to <span class="code">CTRL + C</span> <span class="code">CTRL + V</span> it. /s</p>

        </description>
        <guid isPermaLink="false">Creating_HTML_DD_List.html</guid>
    </item>
    
    <item>
        <title>YouTube needs to have an open REST API</title>
        <link>https://steve0greatness.github.io/blog/Youtube_needs_a_Rest_API.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Youtube_needs_a_Rest_API.html">read this article online</a>,</p>
            <p>Youtube needs an open Rest API. Here are some reasons:<ol><li>It makes my life easier, as I don't need to write a billion lines of code, and not go throught the <span style="font-style: italic; font-weight: bold;">paid service</span> known as google cloud console, to get an api key.</li><li>It means that you only need to use <span class="code">fetch()</span> on it.</li><li>We don't need the most in depth api.</li></ol></p>

        </description>
        <guid isPermaLink="false">Youtube_needs_a_Rest_API.html</guid>
    </item>
    
    <item>
        <title>How to Make the perfect Tea.</title>
        <link>https://steve0greatness.github.io/blog/How_To_Make_Tea.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/How_To_Make_Tea.html">read this article online</a>,</p>
            <p><div class="notice">this is opinion based, there's no perfect tea</div>Tea is the perfect fit for most meals, breakfast, 2nd breakfast, morning tea, lunch, afTernoon tea, dinner, or supper.<br>But how do I make it? Here's how I make my tea.<h2 id="step1">Step 1</h2>The first step is to get the brand of tea you like. I personally like stuff such as Mighty Leaf, it tastes strong, and your able to use it 3 times without it getting weaker, and even then, you can still use it more, it really doesn't lose it's weakness.<h2 id="step2">Step 2</h2>Get a mug, or tea cup. I personally like mugs, as they are normally bigger, meaning you don't have to refill as much as a tea cup.<h2 id="step3">Step 3</h2>Get your tea, if you're using loose leaf, I'd use a smaller cup to make it, then use a strainer to the leaves out, as it adds texture that I don't like personally, otherwise just put the tea bag in, it is at this point that I like to stir it.<h2 id="step4">Final Step</h2>Enjoy.<br>You can add sugar and <span style="text-decoration: line-through;">milk</span> cream, if you're into those kinda things... even lemon if you really want.<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/English_teaware.jpg/1280px-English_teaware.jpg" title="src: Wikipedia" width="250"></p>

        </description>
        <guid isPermaLink="false">How_To_Make_Tea.html</guid>
    </item>
    
    <item>
        <title>Merging the Blog repo in the main one</title>
        <link>https://steve0greatness.github.io/blog/Merging_Blog_to_the_main_site.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Merging_Blog_to_the_main_site.html">read this article online</a>,</p>
            <p>The blog for the repository has recently been merged into the main one, it used to be it's own repository, but now it's part of <a href="https://github.com/steve0greatness/steve0greatness.github.io">this repo</a>.<br>I hope this change isn't horrible, I did it for the simple fact that it makes the whole site easier to make, just because of the fact that I don't need to make 2 repls that have the same look, and are for the same site.<br>The <a href="https://github.com/steve0greatness/blog">blog repo</a> is now read only, or archived, and has been unpinned from my <a href="https://github.com/steve0greatness">profile</a>. This shouldn't cause any slowdowns for the site.</p>

        </description>
        <guid isPermaLink="false">Merging_Blog_to_the_main_site.html</guid>
    </item>
    
    <item>
        <title>Changing the light-mode</title>
        <link>https://steve0greatness.github.io/blog/Changing_the_Light-mode.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Changing_the_Light-mode.html">read this article online</a>,</p>
            <p>As of currently, the light mode on this site doesn't live up to what I want it to be.<br>I want it to be something that is the opposite of the dark mode, and it really isn't that. Expect it to change. But, in case you do still want to view it, here are the current css variable colors:<br><div class="code">html.l {<div style="margin-left: 1em;">--navCo: #0F0089;<br>--headCo: #3700FF;<br>--linkCo: #F7E45D;<br>--maCo: #0044F7;<br>--maTxtCo: #C2FFBA;<br>--buCo: #F09;<br>--buTxtCo: #0FF;<br>--buBoCo: #fff;<br>--noteCo: #f25;<br>--noteTxtCo: #ccc;<br>--inCo: #0bf;<br>--inlinkCo: #05c;<br>--selCo: #f51;<br>--selTxtCo: #059;<br>--taCo: #cf4;<br>--taTxtCo: black;</div>}</div></p>

        </description>
        <guid isPermaLink="false">Changing_the_Light-mode.html</guid>
    </item>
    
    <item>
        <title>What about the second site?</title>
        <link>https://steve0greatness.github.io/blog/What-about-the-second-site.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/What-about-the-second-site.html">read this article online</a>,</p>
            <p>So you may know about <a href="https://stevesgreatness.repl.co">StevesGreatness.Repl.Co</a>, or, the second site.<br>It contains more than what this one does, but also less. It doesn't have a blog, information about my alts on Scratch, or even addition projects. However, it does have a page for testing, an about me, a list of my accounts on other sites, and a list of my repls(which I want to eventually turn into a list of my repos, and Scratch projects as well).</p>

        </description>
        <guid isPermaLink="false">What-about-the-second-site.html</guid>
    </item>
    
    <item>
        <title>Dividing by 0</title>
        <link>https://steve0greatness.github.io/blog/dividing-by-0.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/dividing-by-0.html">read this article online</a>,</p>
            <div class="notice">This post isn't very good, and I'm not proud of it.</div><div class="notice">This post is not fact, the word problems are wrong, and it would never be x*0, rather, it would be 0*x</div>So, lets say you own a hotel(just go along with it).<p>You have 2 rooms, and 0 people, if each room gets an equal amount of people(not including decimals, you can't have half, or a quarter of a person without them being dead)<div>common sense would tell you that you need that there would be 0 people in each room, right? Wrong, and now ever mathematician in the world will hunt you down.</div>Wait, if that's not correct, what is the right answer? Thanks for asking... me. The answer is, infinity... but why?</p>Well, according to the mathematicians, it's because you can fit infinite 0s of people into 1 room.<div>It's weird... I know. So why don't we correct this? Because the mathematicians decided that x/0=infinity... and ifyou know one, you'd know that they don't really like to be corrected. But we can still correct, we just need to get the current mathematician out of their seats... hm...</div>

        </description>
        <guid isPermaLink="false">dividing-by-0.html</guid>
    </item>
    
    <item>
        <title>Why inspect-element is useful</title>
        <link>https://steve0greatness.github.io/blog/Why-inspect-element-is-a-useful-tool.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/Why-inspect-element-is-a-useful-tool.html">read this article online</a>,</p>
            <p><div class="notice">This post isn't very good, and I'm not proud of it.</div>So, as of currently, my <a href="https://ocular.jeffalo.net/user/Steve0Greatness">Ocular Status</a> is <span style="font-style: italic; color: #0dbfb7; background-color: #0f0f0f;">Mobile needs a better browser! #MobileSmartBrowser! (Er/Him)</span>. Part of the reason for this is so that inspect can be on mobile.<p>but what makes inspect so important?</p>Well I'm glad I asked!<div>So on GitHub, you only have 2000 actions you can do(on the free plan). So that means you need to use them carefully, make sure that you won't do something that wastes an action.</div>It helps you fix any mistake, before you make anymore. <div>Of course, you can always download the file, and edit it offline. But inspect element is easier, live, and requires less space in your hard-drive.</div>Thanks for coming to my Ted-talk.😜🤪</p>

        </description>
        <guid isPermaLink="false">Why-inspect-element-is-a-useful-tool.html</guid>
    </item>
    
    <item>
        <title>How to Copy & Paste on mobile</title>
        <link>https://steve0greatness.github.io/blog/How-to-copy-and-paste-on-mobile.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/How-to-copy-and-paste-on-mobile.html">read this article online</a>,</p>
            <p><div class="notice">This post isn't very good, and I'm not proud of it.</div>Recently, I've been seeing a lot of people coming up with one excuse for not linking the dupelicate topic in the suggestions forum. They say something like,<div style="background-color: #979797;color: black;padding: 3px;">I'm on mobile!!!!! &#128534;&#128557;&#128555;</div>this is not a correct argument, so I've decided to make this post to prove it.<h1>Safari/iOS</h1>the way that you copy and paste on Safari is by double taping on the text, then dragging until you've selected all the text<span style="color: #FF0000;">(the next bit works for links, not this)</span><h2>Coping links</h2>tap and hold on the link until you see:<img src="https://i.ibb.co/9cYsfcP/IMG-5938.jpg" alt="open, open in background, open in new window, download link file, add to reading list, *copy*, share" border="0" width="130" height="105"><h2>Paste</h2>going to any textbox, in the top-lefT-hand conner, you should see a little clipboard icon(as long as you aren't selecting any text), press it. tap "copy(circled in <span style="color: #FF0000;">red</span>)"<div style="background-color: #ff0004; color: #00FFFF; text-align: center;">🏷Note: I don't own an android tablet or phone, so take this with a grain of salt</div><h1>Chrome/Android</h1>press and hold until a few selection boxes come up(might work for links)<h2>pasting</h2>tap and hold int the text box, you should see "paste," now click that(boxed in <span style="color: #FF0000;">:<img src="https://u.cubeupload.com/Steve_Greatness/Screenshot2021050571.png" width="300" height="60"><span style="font-size: 10px;"><a href="https://www.businessinsider.com/how-to-copy-and-paste-on-android?op=1">Image Source</a></span></p>

        </description>
        <guid isPermaLink="false">How-to-copy-and-paste-on-mobile.html</guid>
    </item>
    
    <item>
        <title>How to make mockups</title>
        <link>https://steve0greatness.github.io/blog/How-To-make-mockups.html</link>
        <description>
            <p>Depending on your RSS reader, you may want to x<a href="https://steve0greatness.github.io/blog/How-To-make-mockups.html">read this article online</a>,</p>
            <p><div class="notice">This post isn't very good, and I'm not proud of it.</div>The first step to making a mockup is to open up the inpect menu, you may be able to do this using <t>ctrl+shifT+i</t>(or <t>f12</t>)<div class="Notice">this will be different from browser to browser.</div>once you see inspect element open, simply go to the page you're making a mockup for(ex. <a href="https://Scratch.mit.edu/mystuff">MyStuff</a>; or if you're making a new page, go to the page that looks the closest.), and press <t>ctrl+shifT+c</t>, and click on the area that you want to change(ex. the <t>+ New Project</t> button.<p>now that you've selected the element, let's learn how to edit it! You should see the element that you clicked on(using the <t>ctrl+shifT+c</t> command) highlighted in blue. Inside of the element(if you selected text, or even an image), you should see a darker area, that isn't red, <t>double click</t> on it, it should now be hilighted, now type in whatever you want(if it's an image, make sure to put in an image link, ex. https://imagehoster.com/png/png.png; if you clicked on a link(in the "" in "a href=''", unselect it and select the part "<a href='link'>"here"</a>").</p>anyways... if you don't have the monna lisa yet, just give up /s</p>

        </description>
        <guid isPermaLink="false">How-To-make-mockups.html</guid>
    </item>
    
</channel>

</rss> 